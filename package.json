{
	"name": "@dr-nio/aura-path-algorithms",
	"version": "2.0.0",
	"description": "AURA - Adaptive Unified Routing Algorithms: A modern ES package providing graph shortest-path algorithms (Aura, Dijkstra, A*).",
	"license": "MIT",
	"author": "Nicholas Oscar",
	"repository": {
		"type": "git",
		"url": "https://github.com/Dr-Nio/aura-path-algorithms.git"
	},
	"homepage": "https://github.com/Dr-Nio/aura-path-algorithms#readme",
	"bugs": {
		"url": "https://github.com/Dr-Nio/aura-path-algorithms/issues"
	},
	"type": "module",
	"main": "./src/index.js",
	"exports": {
		".": {
			"import": "./src/index.js"
		}
	},
	"files": [
		"src"
	],
	"scripts": {
		"test": "cross-env NODE_OPTIONS=--experimental-vm-modules jest --runInBand --config jest.config.js",
		"test:watch": "NODE_OPTIONS=--experimental-vm-modules jest --watchAll",
		"build": "echo \"JS ESM package â€“ no build step required\"",
		"clean": "rimraf dist || true"
	},
	"keywords": [
		"aura",
		"route",
		"routing",
		"short",
		"shorter",
		"shortest",
		"shorten",
		"shortener",
		"path",
		"paths",
		"shortest-path",
		"dijkstra",
		"bellman",
		"ford",
		"fords",
		"bellman-ford",
		"floyd",
		"warshall",
		"floyd-warshall",
		"graph",
		"algorithm",
		"algorithms",
		"graph-algorithms",
		"find",
		"finds",
		"finding",
		"findings",
		"pathfinding",
		"esm",
		"typescript",
		"benchmark",
		"map",
		"maps",
		"mapping",
		"vite",
		"vites",
		"test",
		"tests",
		"Ai",
		"AI",
		"transport",
		"transports",
		"transportation",
		"network",
		"networks",
		"networking",
		"model",
		"models",
		"modeling",
		"react",
		"angular",
		"angularjs",
		"angular.js",
		"deno",
		"denojs",
		"deno.js",
		"next",
		"nextjs",
		"next.js",
		"javascript",
		"js",
		"c++",
		"c#",
		"python",
		"java",
		"rust",
		"kotlin",
		"php",
		"namespace",
		"enterprise",
    "hospital",
    "hospitality",
    "bank",
    "banking"
	],
	"devDependencies": {
		"cross-env": "^10.0.0",
		"jest": "^29.7.0",
		"rimraf": "^6.0.0"
	},
	"jest": {
		"testEnvironment": "node",
		"transform": {}
	}
}
